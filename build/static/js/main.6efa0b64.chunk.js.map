{"version":3,"sources":["firebase/firebase.utils.js","components/Login.jsx","components/Add.jsx","components/Welcome.jsx","components/Navbar.jsx","components/Question.jsx","components/CategoryQuestions.jsx","components/VerifyWrapper.jsx","components/EditQuestion.jsx","components/NotFound.jsx","components/Test.jsx","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","storage","addQuestionToFirestore","data","quiz","a","collection","doc","set","questionRef","console","log","loginWithFirestore","role","email","password","get","userRef","response","forEach","status","id","checkForAuth","exists","Login","user","setUser","useState","setEmail","setPassword","setRole","error","setError","login","e","preventDefault","localStorage","setItem","JSON","stringify","className","to","Form","onSubmit","Group","Label","Control","type","placeholder","name","onChange","target","value","required","Text","Button","variant","style","margin","onClick","Alert","Add","initCategoryValue","isChecked","initOptionValue","mcq","setMcq","title","setTitle","image","setImage","imageUrl","setImageUrl","answer","setAnswer","categoryError","showCategoryError","showError","setShowError","showSuccessMsg","setShowSuccessMsg","region","setRegion","optionValue","setOptionValue","categories","setCategories","handleCheck","map","c","handleOption","opt","handleSubmit","categorySelected","category","push","length","options","imageURL","createdBy","creationDate","Date","toLocaleString","publishedBy","publishDate","then","setTimeout","window","scrollTo","catch","err","width","border","val","display","flexWrap","justifyContent","Check","key","checked","label","textAlign","outline","as","index","accept","files","ref","put","on","snapshot","child","getDownloadURL","url","Welcome","link","flexDirection","height","alignItems","fontSize","strings","autoStart","loop","size","Navbar","setLink","Nav","Link","href","color","fontWeight","NavDropdown","Item","eventKey","removeItem","Question","questionData","publishUpdate","questions","setQuestions","publishBanner","setPublishBanner","discardBanner","setDiscardBanner","que","Card","marginTop","Body","Header","Image","alt","src","thumbnail","backgroundColor","padding","Title","adminId","question","delete","filter","publish","marginRight","discard","pathname","state","CategoryQuestions","setKey","setData","useEffect","Tabs","activeKey","onSelect","k","Tab","VerifyWrapper","publishQuestions","setPublishQuestions","discardQuestions","setDiscardQuestions","loading","setLoading","unpublished","querySnapshot","docs","ques","published","Container","defaultActiveKey","Row","Col","sm","Content","Pane","updatedPublish","cat","unshift","EditQuestion","setOptions","setImageURL","showBanner","setShowBanner","updating","setUpdating","useParams","useLocation","update","newArr","updateOptions","maxWidth","body","NotFound","Test","setPublish","draft","setDraft","App","parse","getItem","checkAuth","path","exact","component","render","match","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6efa0b64.chunk.js","sourcesContent":["import * as firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/storage'\n\nvar firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_APP,\n  authDomain: 'quizzy-a4b01.firebaseapp.com',\n  databaseURL: 'https://quizzy-a4b01.firebaseio.com',\n  projectId: 'quizzy-a4b01',\n  storageBucket: 'quizzy-a4b01.appspot.com',\n  messagingSenderId: '516961689040',\n  appId: '1:516961689040:web:ea13bc2c5e355c782aedd5'\n}\n\nfirebase.initializeApp(firebaseConfig)\n\nexport const firestore = firebase.firestore()\n\nexport const storage = firebase.storage()\n\nexport const addQuestionToFirestore = async (data, quiz) => {\n  const questionRef = await firestore\n    .collection('questions')\n    .doc(quiz)\n    .collection('DRAFT')\n    .doc()\n    .set(data)\n  console.log(questionRef)\n}\n\nexport const loginWithFirestore = async (role, email, password) => {\n  const userRef = await firestore.collection(role).get()\n  let response = {}\n  userRef.forEach(doc => {\n    if (doc.data().email === email && doc.data().password === password) {\n      response.status = 'SUCCESS'\n      response.data = {\n        email,\n        role,\n        id: doc.id\n      }\n    }\n  })\n\n  return response\n}\n\nexport const checkForAuth = async (role, id) => {\n  const userRef = await firestore\n    .collection(role)\n    .doc(id)\n    .get()\n  let response = {}\n  if (userRef.exists) {\n    response.status = 'SUCCESS'\n    response.data = {\n      email: userRef.data().email,\n      id,\n      role\n    }\n  }\n  return response\n}\n\nexport const getDraftQuestions = async () => {\n  const responseQuestions = []\n  const questionsRef = firestore.collection('questions')\n  const questionsRefData = await questionsRef.get()\n\n  questionsRefData.docs.forEach(async doc => {\n    const questionsData = await questionsRef\n      .doc(doc.id)\n      .collection('DRAFT')\n      .get()\n    const questions = []\n\n    questionsData.forEach(async question => {\n      const data = question.data()\n      questions.push({\n        id: question.id,\n        ...data\n      })\n    })\n    responseQuestions.push({\n      category: doc.id,\n      questions\n    })\n  })\n  return responseQuestions\n}\n","import React, { useState } from 'react'\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom'\nimport { loginWithFirestore } from '../firebase/firebase.utils'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nexport default function Login({ user, setUser }) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [role, setRole] = useState('')\n  const [error, setError] = useState(false)\n\n  const login = async (e) => {\n    e.preventDefault()\n    setError(false)\n    if (email && password && role) {\n      const response = await loginWithFirestore(role, email, password)\n\n      if (response?.status === 'SUCCESS') {\n        const { data } = response\n        localStorage.setItem('someQuizzySecret', JSON.stringify(data))\n        setUser(data)\n      } else {\n        setError(true)\n      }\n    }\n  }\n\n  return (\n    <div className=\"login\">\n      {user ? (\n        <>\n          {user.role === 'admin' ? (\n            <Redirect to=\"/verify\" />\n          ) : (\n            <Redirect to=\"/add\" />\n          )}\n        </>\n      ) : (\n        <div>\n          <h1>Quizzy</h1>\n          <Form onSubmit={login}>\n            <Form.Group>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"email\"\n                name=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"password\"\n                name=\"password\"\n                onChange={(e) => setPassword(e.target.value)}\n                required\n              />\n            </Form.Group>\n            <Form.Text>\n              Please enter email and password provided by Quizzy Team\n            </Form.Text>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              style={{ margin: '20px 0' }}\n              onClick={() => setRole('que-user')}\n            >\n              I wan't to draft quiz questions\n            </Button>\n            <br />\n            <Button\n              variant=\"dark\"\n              type=\"submit\"\n              onClick={() => setRole('admin')}\n              style={{ margin: '20px 0' }}\n            >\n              I wan't to publish quiz questions\n            </Button>\n          </Form>\n\n          {error ? (\n            <Alert variant=\"danger\">Invalid credential or Role</Alert>\n          ) : null}\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Form, Button, Alert } from 'react-bootstrap'\nimport { CountryDropdown } from 'react-country-region-selector'\nimport { storage } from '../firebase/firebase.utils'\n\nimport { addQuestionToFirestore } from '../firebase/firebase.utils'\n\nexport default function Add ({ user }) {\n  const initCategoryValue = [\n    { id: 1, value: 'Science And Technology', isChecked: false },\n    { id: 2, value: 'General Culture', isChecked: false },\n    { id: 3, value: 'History', isChecked: false },\n    { id: 4, value: 'Movie', isChecked: false }\n  ]\n\n  const initOptionValue = [\n    { id: 1, name: 'option1', value: '' },\n    { id: 2, name: 'option2', value: '' },\n    { id: 3, name: 'option3', value: '' },\n    { id: 4, name: 'option4', value: '' }\n  ]\n\n  const [mcq, setMcq] = useState(true)\n  const [title, setTitle] = useState('')\n  const [image, setImage] = useState(null)\n  const [imageUrl, setImageUrl] = useState(null)\n  const [answer, setAnswer] = useState('')\n  const [categoryError, showCategoryError] = useState(false)\n  const [showError, setShowError] = useState(false)\n  const [showSuccessMsg, setShowSuccessMsg] = useState(false)\n  const [region, setRegion] = useState('')\n\n  const [optionValue, setOptionValue] = useState(initOptionValue)\n  const [categories, setCategories] = useState(initCategoryValue)\n\n  const handleChange = e => {\n    if (e.target.files[0]) {\n      setImageUrl(null)\n      const image = e.target.files[0]\n      setImage(image)\n    }\n  }\n\n  const handleUpload = e => {\n    e.preventDefault()\n    if (image !== null) {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image)\n      uploadTask.on(\n        'state_changed',\n        snapshot => {},\n        error => {\n          // Error function ...\n          console.log(error)\n        },\n        () => {\n          // complete function ...\n          storage\n            .ref('images')\n            .child(image.name)\n            .getDownloadURL()\n            .then(url => {\n              setImageUrl(url)\n            })\n        }\n      )\n    }\n  }\n\n  const handleCheck = e => {\n    setCategories(\n      categories.map(c =>\n        c.value === e.target.value ? { ...c, isChecked: !c.isChecked } : c\n      )\n    )\n  }\n\n  const handleOption = e => {\n    setOptionValue(\n      optionValue.map(opt =>\n        opt.name === e.target.name ? { ...opt, value: e.target.value } : opt\n      )\n    )\n  }\n\n  const handleSubmit = async e => {\n    setShowError(false)\n    e.preventDefault()\n    showCategoryError(false)\n    let categorySelected = []\n    categories.map(category => {\n      if (category.isChecked) {\n        categorySelected.push(category.value)\n      }\n      return null\n    })\n\n    if (categorySelected.length > 0) {\n      let options = []\n      if (mcq) {\n        optionValue.map(opt => options.push(opt.value))\n      }\n\n      let data = {\n        title,\n        imageURL: imageUrl,\n        options,\n        answer: answer === '' ? optionValue[0].value : answer,\n        createdBy: user.id,\n        creationDate: new Date().toLocaleString(),\n        publishedBy: null,\n        publishDate: null,\n        region\n      }\n\n      categorySelected.map(async category => {\n        addQuestionToFirestore(data, category)\n          .then(() => {\n            setShowSuccessMsg(true)\n            setTimeout(() => {\n              setShowSuccessMsg(false)\n            }, 10000)\n            setOptionValue(initOptionValue)\n            setCategories(initCategoryValue)\n            setAnswer('')\n            setTitle('')\n            setImageUrl('')\n            setRegion('')\n            setImage(null)\n            window.scrollTo(0, 0)\n          })\n          .catch(err => {\n            setTimeout(() => {\n              setShowError(false)\n            }, 10000)\n            window.scrollTo(0, 0)\n          })\n      })\n    } else {\n      showCategoryError(true)\n    }\n  }\n\n  return (\n    <div className='add'>\n      {!user ? (\n        <h1>Please Login to Add Questions</h1>\n      ) : (\n        <>\n          {user.role === 'admin' ? (\n            <>\n              <h1>You are not privilege to add question</h1>\n              <h3>Login as User</h3>\n            </>\n          ) : (\n            <>\n              {showSuccessMsg ? (\n                <Alert variant='success'>\n                  Question has been submitted. As soon as Admin verify the\n                  question it will be available to all Quizzy users.\n                </Alert>\n              ) : null}\n              {showError ? (\n                <Alert variant='danger'>\n                  Something Went Wrong. Please try Again.\n                </Alert>\n              ) : null}\n              <Form onSubmit={handleSubmit}>\n                <CountryDropdown\n                  style={{\n                    width: '100%',\n                    margin: '20px 0',\n                    border: '3px solid blue'\n                  }}\n                  value={region}\n                  onChange={val => setRegion(val)}\n                />\n                <br />\n                <Form.Label variant='h1'>Categories</Form.Label>\n                <Form.Group\n                  style={{\n                    display: 'flex',\n                    flexWrap: 'wrap',\n                    justifyContent: 'space-evenly'\n                  }}\n                >\n                  {categories.map(category => (\n                    <Form.Check\n                      className='cat-check'\n                      onChange={handleCheck}\n                      key={category.id}\n                      checked={category.isChecked}\n                      value={category.value}\n                      label={category.value}\n                    />\n                  ))}\n                </Form.Group>\n                <div style={{ textAlign: 'center' }}>\n                  <Button\n                    variant={mcq ? 'outline-primary' : 'primary'}\n                    onClick={() => setMcq(!mcq)}\n                    style={{ margin: '20px 0', outline: 'none' }}\n                  >\n                    {mcq\n                      ? 'Change to Image Based Question'\n                      : 'Change to MCQ Based Question'}\n                  </Button>\n                </div>\n                <Form.Group>\n                  <Form.Label>Title</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='Enter Title'\n                    value={title}\n                    onChange={e => setTitle(e.target.value)}\n                    required\n                  />\n                </Form.Group>\n                {mcq ? (\n                  <>\n                    {optionValue.map(opt => (\n                      <Form.Group key={opt.id}>\n                        <Form.Label>Option {opt.id}</Form.Label>\n                        <Form.Control\n                          type='text'\n                          name={opt.name}\n                          placeholder='Enter option'\n                          value={opt.value}\n                          onChange={handleOption}\n                          required\n                        />\n                      </Form.Group>\n                    ))}\n                  </>\n                ) : null}\n                <Form.Group>\n                  <Form.Label>Answer</Form.Label>\n                  {mcq ? (\n                    <Form.Control\n                      as='select'\n                      required\n                      value={answer}\n                      onChange={e => {\n                        setAnswer(e.target.value)\n                      }}\n                    >\n                      {optionValue.map((opt, index) => (\n                        <option key={index} value={opt.value}>\n                          {opt.name}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  ) : (\n                    <Form.Control\n                      type='text'\n                      placeholder='Enter Answer of this Question in text'\n                      value={answer}\n                      onChange={e => setAnswer(e.target.value)}\n                      required\n                    />\n                  )}\n                  <Form.Text className='text-muted'>\n                    Please write the same text as in option for answer\n                  </Form.Text>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Label>\n                    Upload Image {mcq ? '(Optonal)' : null}\n                  </Form.Label>\n                  <div className='image-upload'>\n                    <input\n                      type='file'\n                      name='myImage'\n                      accept='image/x-png,image/gif,image/jpeg'\n                      onChange={handleChange}\n                      required={mcq ? false : true}\n                    />\n                    <div className='image-button'>\n                      <Button\n                        variant={imageUrl ? 'success' : 'primary'}\n                        onClick={handleUpload}\n                        className='waves-effect waves-light btn'\n                      >\n                        {imageUrl ? 'Uploaded ✅' : 'Upload'}\n                      </Button>\n                    </div>\n                  </div>\n                </Form.Group>\n                <div style={{ textAlign: 'center' }}>\n                  <Button\n                    type='submit'\n                    variant='primary'\n                    style={{ textAlign: 'center' }}\n                  >\n                    Add Question\n                  </Button>\n                </div>\n              </Form>\n              {categoryError ? (\n                <Alert variant='danger'>Please select anyone category</Alert>\n              ) : null}\n            </>\n          )}\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport Typewriter from 'typewriter-effect'\nimport { Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nexport default function Welcome({ link }) {\n  return (\n    <div\n      className=\"welcome\"\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '90vw',\n        height: '90vh',\n        justifyContent: 'space-evenly',\n        alignItems: 'center',\n        margin: '0 auto',\n      }}\n    >\n      <h1>\n        <Typewriter\n          style={{ fontSize: '2rem' }}\n          options={{\n            strings: [\n              'Welcome to Quizzy portal',\n              'A portal to manage all Quizzy questions',\n            ],\n            autoStart: true,\n            loop: true,\n          }}\n        />\n      </h1>\n      {link ? (\n        <Button variant=\"outline-primary\" size=\"lg\">\n          <Link to={link}>\n            {link === '/add' ? 'Add Question' : 'Verify Questions'}\n          </Link>\n        </Button>\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Nav, NavDropdown } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nexport default function Navbar({ user, setUser, setLink }) {\n  return (\n    <div className=\"navbar-custom\">\n      <Nav>\n        <Nav.Link\n          href=\"/\"\n          style={{\n            color: 'aquamarine',\n            fontWeight: '800',\n            fontSize: '1.2rem',\n          }}\n        >\n          QUIZZY\n        </Nav.Link>\n        {!user ? (\n          <Link to=\"/login\" style={{ display: 'flex', alignItems: 'center' }}>\n            <Nav.Item href=\"/login\">Login</Nav.Item>\n          </Link>\n        ) : (\n          <NavDropdown title={user.email}>\n            <NavDropdown.Item\n              eventKey=\"logout\"\n              onClick={() => {\n                setUser(null)\n                setLink(null)\n                localStorage.removeItem('someQuizzySecret')\n              }}\n            >\n              <Link to=\"/\">Logout</Link>\n            </NavDropdown.Item>\n          </NavDropdown>\n        )}\n      </Nav>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { Card, Button, Alert, Image } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport { firestore } from '../firebase/firebase.utils'\n\nexport default function Question({\n  questionData,\n  user,\n  quiz,\n  type,\n  publishUpdate,\n}) {\n  const [questions, setQuestions] = useState(questionData)\n  const [publishBanner, setPublishBanner] = useState(false)\n  const [discardBanner, setDiscardBanner] = useState(false)\n\n  const publish = (quiz, id, adminId, question) => {\n    const data = {\n      ...question,\n      publishedBy: adminId,\n      publishDate: new Date().toLocaleString(),\n    }\n    firestore\n      .collection('questions')\n      .doc(quiz)\n      .collection('PUBLISHED')\n      .doc(id)\n      .set(data)\n      .then(() => {\n        firestore\n          .collection('questions')\n          .doc(quiz)\n          .collection('DRAFT')\n          .doc(id)\n          .delete()\n          .then(() => {\n            setQuestions(questions.filter((question) => question.id !== id))\n            setPublishBanner(true)\n            setTimeout(() => {\n              setPublishBanner(false)\n            }, 4000)\n          })\n          .then(() => {\n            publishUpdate(quiz, data)\n          })\n      })\n  }\n\n  const discard = (quiz, id, type) => {\n    firestore\n      .collection('questions')\n      .doc(quiz)\n      .collection(type)\n      .doc(id)\n      .delete()\n      .then(() => {\n        setQuestions(questions.filter((question) => question.id !== id))\n        setDiscardBanner(true)\n        setTimeout(() => {\n          setDiscardBanner(false)\n        }, 4000)\n      })\n  }\n\n  return (\n    <div>\n      {publishBanner ? (\n        <Alert variant=\"success\">The Question has been published</Alert>\n      ) : null}\n      {discardBanner ? (\n        <Alert variant=\"danger\">The Question has been removed</Alert>\n      ) : null}\n\n      {questions.length > 0 ? (\n        <div>\n          {questions.map((que) => (\n            <Card key={que.id} style={{ marginTop: '2rem' }}>\n              <Card.Body>\n                <Card.Header as=\"h5\">{que.title}</Card.Header>\n                <Card.Text>\n                  Region: {que.region === '' ? 'Global' : que.region}\n                </Card.Text>\n                {que.imageURL !== '' ? (\n                  <Image\n                    alt=\"Question\"\n                    src={que.imageURL}\n                    thumbnail\n                    style={{ width: '360px', height: '360px' }}\n                  />\n                ) : null}\n                <Card.Text>ImageURL: {que.imageURL}</Card.Text>\n                {que.options.length > 0 ? (\n                  <div\n                    style={{\n                      display: 'flex',\n                      flexDirection: 'row',\n                      flexWrap: 'wrap',\n                      justifyContent: 'space-around',\n                      alignItems: 'center',\n                    }}\n                  >\n                    {que.options.map((opt, index) => (\n                      <Card.Text\n                        style={{\n                          width: '40%',\n                          backgroundColor: '#DAE0E2',\n                          padding: '2px',\n                        }}\n                        key={index}\n                      >\n                        Option {index + 1}: {opt}\n                      </Card.Text>\n                    ))}\n                  </div>\n                ) : (\n                  <Card.Text>No Option Available</Card.Text>\n                )}\n                <Card.Title>Answer: {que.answer}</Card.Title>\n                {type === 'DRAFT' ? (\n                  <Button\n                    variant=\"success\"\n                    onClick={() => publish(quiz, que.id, user.id, que)}\n                    style={{ marginRight: '30px' }}\n                  >\n                    Publish\n                  </Button>\n                ) : null}\n                <Button\n                  variant=\"danger\"\n                  onClick={() => discard(quiz, que.id, type)}\n                  style={{ marginRight: '30px' }}\n                >\n                  Discard\n                </Button>\n                <Link\n                  to={{\n                    pathname: '/edit/' + que.id,\n                    state: {\n                      category: quiz,\n                      type: type,\n                    },\n                  }}\n                >\n                  <Button variant=\"primary\">Edit</Button>\n                </Link>\n              </Card.Body>\n            </Card>\n          ))}\n        </div>\n      ) : (\n        <h1>No Questions in this category</h1>\n      )}\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\n// import { Tabs, Tab, TabList, TabPanel } from 'react-tabs'\nimport { Tabs, Tab } from 'react-bootstrap'\nimport 'react-tabs/style/react-tabs.css'\n\nimport Question from './Question'\n\nexport default function CategoryQuestions({\n  questions,\n  user,\n  type,\n  publishUpdate,\n}) {\n  const [key, setKey] = useState('')\n  const [data, setData] = useState(null)\n\n  useEffect(() => {\n    setData(questions)\n  }, [questions])\n\n  return (\n    <>\n      {data ? (\n        <Tabs\n          id=\"controlled-tab-example\"\n          activeKey={key}\n          onSelect={(k) => setKey(k)}\n        >\n          {data.map((category, index) => (\n            <Tab\n              eventKey={category.category}\n              title={category.category}\n              key={index}\n            >\n              <Question\n                publishUpdate={publishUpdate}\n                questionData={category.questions}\n                quiz={category.category}\n                user={user}\n                type={type}\n              />\n            </Tab>\n          ))}\n        </Tabs>\n      ) : // <Tabs defaultFocus={true}>\n      //   <TabList defaultChecked={true}>\n      //     {data.map((cat, index) => {\n      //       return <Tab key={index}>{cat.category}</Tab>\n      //     })}\n      //   </TabList>\n      //   {data.map((cat, index) => (\n      //     <TabPanel defaultChecked={true} key={index}>\n      //       <Question\n      //         questionData={cat.questions}\n      //         quiz={cat.category}\n      //         user={user}\n      //         type={type}\n      //       />\n      //     </TabPanel>\n      //   ))}\n      // </Tabs>\n      // <Tabs id='controlled-tab-example' onSelect={k => setKey(k)}>\n      //   {data.map((cat, index) => {\n      //     return (\n      //       <Tab eventKey={cat.category} title={cat.category} key={index}>\n      //         <Question\n      //           questionData={cat.questions}\n      //           quiz={cat.category}\n      //           user={user}\n      //         />\n      //       </Tab>\n      //     )\n      //   })}\n      // </Tabs>\n\n      null}\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Tab, Row, Nav, Col } from 'react-bootstrap'\nimport { firestore } from '../firebase/firebase.utils'\nimport CategoryQuestions from './CategoryQuestions'\n\nexport default function VerifyWrapper({ user }) {\n  const [publishQuestions, setPublishQuestions] = useState(null)\n  const [discardQuestions, setDiscardQuestions] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (user?.role === 'admin') {\n      let unpublished = []\n      firestore\n        .collection('questions')\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.docs.forEach((doc) => {\n            const questions = []\n            firestore\n              .collection('questions')\n              .doc(doc.id)\n              .collection('DRAFT')\n              .get()\n              .then((ques) => {\n                ques.forEach((question) => {\n                  questions.push({\n                    id: question.id,\n                    ...question.data(),\n                  })\n                })\n              })\n            unpublished.push({\n              category: doc.id,\n              questions,\n            })\n          })\n        })\n        .then(() => {\n          setDiscardQuestions(unpublished)\n        })\n    }\n  }, [user])\n\n  useEffect(() => {\n    if (user?.role === 'admin') {\n      let published = []\n      firestore\n        .collection('questions')\n        .get()\n        .then((querySnapshot) => {\n          querySnapshot.docs.forEach((doc) => {\n            const questions = []\n            firestore\n              .collection('questions')\n              .doc(doc.id)\n              .collection('PUBLISHED')\n              .get()\n              .then((ques) => {\n                ques.forEach((question) => {\n                  questions.push({\n                    id: question.id,\n                    ...question.data(),\n                  })\n                })\n              })\n            published.push({\n              category: doc.id,\n              questions,\n            })\n          })\n        })\n        .then(() => {\n          setPublishQuestions(published)\n        })\n    }\n  }, [user])\n\n  useEffect(() => {\n    if (publishQuestions && setDiscardQuestions) {\n      setLoading(false)\n    }\n  }, [publishQuestions, discardQuestions])\n\n  const publishUpdate = (quiz, question) => {\n    const updatedPublish = [...publishQuestions]\n    publishQuestions.map((cat) => {\n      if (cat.category === quiz) {\n        cat.questions.unshift(question)\n      }\n      return null\n    })\n\n    setPublishQuestions(updatedPublish)\n  }\n\n  return (\n    <div style={{ padding: '10px' }}>\n      {!user ? (\n        <h1>Please login to continue</h1>\n      ) : user.role === 'que-user' ? (\n        <h1>Only Admin can publish question</h1>\n      ) : user.role === 'admin' && !loading ? (\n        <Tab.Container id=\"left-tabs-example\" defaultActiveKey=\"unpublished\">\n          <Row>\n            <Col sm={3}>\n              <Nav variant=\"pills\" className=\"flex-column\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"unpublished\">Unpublished</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"published\">Published</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Col>\n            <Col sm={9}>\n              <Tab.Content>\n                <Tab.Pane eventKey=\"unpublished\">\n                  <CategoryQuestions\n                    publishUpdate={publishUpdate}\n                    questions={discardQuestions}\n                    user={user}\n                    type=\"DRAFT\"\n                  />\n                </Tab.Pane>\n                <Tab.Pane eventKey=\"published\">\n                  <CategoryQuestions\n                    questions={publishQuestions}\n                    user={user}\n                    type=\"PUBLISHED\"\n                  />\n                </Tab.Pane>\n              </Tab.Content>\n            </Col>\n          </Row>\n        </Tab.Container>\n      ) : (\n        <h1>Loading Please wait</h1>\n      )}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { useParams, useLocation } from 'react-router-dom'\nimport { CountryDropdown } from 'react-country-region-selector'\nimport { Form, Button, Alert } from 'react-bootstrap'\n\nimport { firestore, storage } from '../firebase/firebase.utils'\n\nexport default function EditQuestion() {\n  const [loading, setLoading] = useState(true)\n  const [options, setOptions] = useState(null)\n  const [title, setTitle] = useState(null)\n  const [imageURL, setImageURL] = useState(null)\n  const [image, setImage] = useState(null)\n  const [region, setRegion] = useState(null)\n  const [answer, setAnswer] = useState(null)\n  const [mcq, setMcq] = useState(false)\n  const [data, setData] = useState(null)\n  const [showBanner, setShowBanner] = useState(false)\n  const [updating, setUpdating] = useState(false)\n\n  const { id } = useParams()\n  const { state } = useLocation()\n\n  const { category, type } = state\n  useEffect(() => {\n    firestore\n      .collection('questions')\n      .doc(category)\n      .collection(type)\n      .doc(id)\n      .get()\n      .then((snapshot) => {\n        const data = snapshot.data()\n        const { options, title, answer, imageURL, region } = data\n        setData(data)\n        setImageURL(imageURL)\n        setOptions(options)\n        setTitle(title)\n        setAnswer(answer)\n        setRegion(region)\n        setMcq(options.length > 0 ? true : false)\n      })\n      .then(() => {\n        setLoading(false)\n      })\n  }, [id, category, type])\n\n  const handleChange = (e) => {\n    if (e.target.files[0]) {\n      const image = e.target.files[0]\n      setImage(image)\n    }\n  }\n\n  const handleUpload = (e) => {\n    e.preventDefault()\n    if (image !== null) {\n      const uploadTask = storage.ref(`images/${image.name}`).put(image)\n      uploadTask.on(\n        'state_changed',\n        (snapshot) => {},\n        (error) => {\n          // Error function ...\n          console.log(error)\n        },\n        () => {\n          // complete function ...\n          storage\n            .ref('images')\n            .child(image.name)\n            .getDownloadURL()\n            .then((url) => {\n              setImageURL(url)\n            })\n        },\n      )\n    }\n  }\n\n  const updateOptions = (e, index) => {\n    const newArr = [...options]\n    newArr[index] = e.target.value\n    setOptions(newArr)\n  }\n\n  const handleUpdate = (e) => {\n    setUpdating(true)\n    e.preventDefault()\n    firestore\n      .collection('questions')\n      .doc(category)\n      .collection(type)\n      .doc(id)\n      .update({\n        ...data,\n        options,\n        imageURL,\n        title,\n        answer,\n        region,\n      })\n      .then(() => {\n        setShowBanner(true)\n        setUpdating(false)\n        setTimeout(() => {\n          setShowBanner(false)\n        }, 3000)\n      })\n  }\n\n  return (\n    <div className=\"add\">\n      {loading ? (\n        <h1>Loading Please wait ...</h1>\n      ) : (\n        <>\n          {showBanner ? (\n            <Alert variant=\"success\">Question has been been Updated.</Alert>\n          ) : null}\n          <Form onSubmit={handleUpdate}>\n            <Form.Group>\n              <Form.Label>Region</Form.Label>\n              <CountryDropdown\n                style={{\n                  width: '100%',\n                  margin: '20px 0 0 0',\n                  border: '3px solid blue',\n                }}\n                value={region}\n                onChange={(val) => setRegion(val)}\n              />\n              <br />\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                required\n              />\n            </Form.Group>\n            {mcq\n              ? options.map((opt, index) => (\n                  <Form.Group key={index}>\n                    <Form.Label>Option {index + 1}</Form.Label>\n                    <Form.Control\n                      type=\"text\"\n                      name={opt.name}\n                      placeholder=\"Enter option\"\n                      value={opt}\n                      onChange={(e) => updateOptions(e, index)}\n                      required\n                    />\n                  </Form.Group>\n                ))\n              : null}\n            <Form.Group>\n              <Form.Label>Answer</Form.Label>\n              {!mcq ? (\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter Answer of this Question in text\"\n                  value={answer}\n                  onChange={(e) => setAnswer(e.target.value)}\n                  required\n                />\n              ) : (\n                <Form.Control\n                  as=\"select\"\n                  required\n                  value={answer}\n                  onChange={(e) => {\n                    setAnswer(e.target.value)\n                  }}\n                >\n                  {options.map((opt, index) => (\n                    <option key={index} value={opt}>\n                      Option {index + 1}\n                    </option>\n                  ))}\n                </Form.Control>\n              )}\n            </Form.Group>\n            {imageURL ? (\n              <img\n                src={imageURL}\n                alt=\"Question\"\n                style={{ maxWidth: '100%' }}\n                width={400}\n                height={300}\n              />\n            ) : (\n              <h2 body>No Image for this question</h2>\n            )}\n            <Form.Group>\n              <Form.Label>Upload Image {mcq ? '(Optonal)' : null}</Form.Label>\n              <div className=\"image-upload\">\n                <input\n                  type=\"file\"\n                  name=\"myImage\"\n                  accept=\"image/x-png,image/gif,image/jpeg\"\n                  onChange={handleChange}\n                  required={mcq ? false : imageURL ? false : true}\n                />\n                <div className=\"image-button\">\n                  <Button\n                    style={{ marginRight: '10px' }}\n                    variant=\"primary\"\n                    onClick={handleUpload}\n                    className=\"waves-effect waves-light btn\"\n                  >\n                    {imageURL ? 'Update Image' : 'Add Image'}\n                  </Button>\n                  {imageURL && mcq ? (\n                    <Button variant=\"danger\" onClick={() => setImageURL(null)}>\n                      Remove Image\n                    </Button>\n                  ) : null}\n                </div>\n              </div>\n            </Form.Group>\n            <div style={{ textAlign: 'center' }}>\n              <Button type=\"submit\" variant=\"primary\">\n                {updating ? 'Updating' : 'Update'} Question\n              </Button>\n            </div>\n          </Form>\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1>Not Found</h1>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { firestore } from '../firebase/firebase.utils'\n\nexport default function Test({ user }) {\n  const [publish, setPublish] = useState(null)\n  const [draft, setDraft] = useState(null)\n  useEffect(() => {\n    let unpublished = []\n    firestore\n      .collection('questions')\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.docs.forEach((doc) => {\n          const questions = []\n          firestore\n            .collection('questions')\n            .doc(doc.id)\n            .collection('DRAFT')\n            .get()\n            .then((ques) => {\n              ques.forEach((question) => {\n                questions.push({\n                  id: question.id,\n                  ...question.data(),\n                })\n              })\n            })\n          unpublished.push({\n            category: doc.id,\n            questions,\n          })\n        })\n      })\n      .then(() => {\n        setDraft(unpublished)\n      })\n  }, [])\n\n  useEffect(() => {\n    let published = []\n    firestore\n      .collection('questions')\n      .get()\n      .then((querySnapshot) => {\n        querySnapshot.docs.forEach((doc) => {\n          const questions = []\n          firestore\n            .collection('questions')\n            .doc(doc.id)\n            .collection('PUBLISHED')\n            .get()\n            .then((ques) => {\n              ques.forEach((question) => {\n                questions.push({\n                  id: question.id,\n                  ...question.data(),\n                })\n              })\n            })\n          published.push({\n            category: doc.id,\n            questions,\n          })\n        })\n      })\n      .then(() => {\n        setPublish(published)\n      })\n  }, [])\n\n  useEffect(() => {\n    console.log('publish')\n    console.log(publish)\n  }, [publish])\n\n  useEffect(() => {\n    console.log('draft')\n    console.log(draft)\n  }, [draft])\n\n  return (\n    <div>\n      <h1>Hello World</h1>\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { checkForAuth } from './firebase/firebase.utils'\n\nimport Login from './components/Login'\nimport './App.css'\nimport Add from './components/Add'\nimport Welcome from './components/Welcome'\nimport Navbar from './components/Navbar'\nimport VerifyWrapper from './components/VerifyWrapper'\nimport EditQuestion from './components/EditQuestion'\nimport NotFound from './components/NotFound'\nimport Test from './components/Test'\n\nexport const API_URL = 'https://us-central1-quizzy-a4b01.cloudfunctions.net/'\n\nfunction App () {\n  const [user, setUser] = useState(null)\n  const [link, setLink] = useState(null)\n\n  useEffect(() => {\n    const data = JSON.parse(localStorage.getItem('someQuizzySecret'))\n    if (data) {\n      checkAuth(data)\n    }\n    async function checkAuth () {\n      const response = await checkForAuth(data.role, data.id)\n      if (response?.status === 'SUCCESS') {\n        setUser(response.data)\n        if (response.data.role === 'admin') {\n          setLink('/verify')\n        } else if (response.data.role === 'que-user') {\n          setLink('/add')\n        }\n      }\n    }\n  }, [])\n\n  return (\n    <Router>\n      <div className='App'>\n        <Navbar user={user} setUser={setUser} setLink={setLink} />\n        <Route path='/' exact component={() => <Welcome link={link} />} />\n        <Route\n          path='/login'\n          exact\n          render={() => <Login user={user} setUser={setUser} />}\n        />\n        <Route path='/add' exact render={() => user && <Add user={user} />} />\n        <Route\n          path='/verify'\n          exact\n          render={() => <VerifyWrapper user={user} />}\n        />\n        <Route\n          path='/edit/:id'\n          render={({ match }) => {\n            return match ? (\n              <EditQuestion match={match} user={user} />\n            ) : (\n              <NotFound />\n            )\n          }}\n        />\n        <Route\n          path='/test'\n          render={() => {\n            return user && <Test user={user} />\n          }}\n        />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}